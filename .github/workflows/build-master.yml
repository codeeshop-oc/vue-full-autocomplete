# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: build-master
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
env:
  CONFIG_USERNAME: ${{ github.repository }}
  CONFIG_EMAIL: github-actions[bot]@${{ github.repository_owner }}.github.io
  TEMP_BRANCH_NAME: dist-files
  MASTER_BRANCH_NAME: ${{ github.ref_name }}
  COMMIT_MESSAGE: Update Dist Files
  PULL_TITLE: Update Dist Files
  PULL_BODY: Dist Folder Build Files
  ASSIGNEE: ${{ github.repository_owner }}
  REVIEWER: ${{ github.repository_owner }}
  NODE_VERSION: 16

jobs:
  job1:
    name: Build Dist
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.verify_diff.outputs.changed }}
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
    - run: yarn
    - name: Yarn Building
      run: |
        yarn build
    - name: Check for File changes
      id: verify_diff
      run: |
        git diff --quiet . || echo "changed=true" >> $GITHUB_OUTPUT
    - name: No Changes Found
      id: no_changes
      if: steps.verify_diff.outputs.changed != 'true'
      run: |
        exit 0
    - name: Deleting Previous Branches
      run: |
        git branch -D ${{ env.TEMP_BRANCH_NAME }} || echo
        git push -d origin ${{ env.TEMP_BRANCH_NAME }} || echo
    - name: Setting Branch to Temp Branch Name
      run: |
        git checkout -b ${{ env.TEMP_BRANCH_NAME }}
    # Commits all changed files to the repository
    - name: Committing
      run: |
        git config --global user.name "${{ env.CONFIG_USERNAME }}"
        git config --global user.email "${{ env.CONFIG_EMAIL }}"

        git add .
        # "echo" returns true so the build succeeds, even if no changed files
        git commit -m "${{ env.COMMIT_MESSAGE }}"
    - name: Push Commit
      id: checkout
      run: |          
        git push -u origin ${{ env.TEMP_BRANCH_NAME }}
    - name: Merging
      run: |
        git checkout ${{ env.MASTER_BRANCH_NAME }}
        gh repo set-default ${{ env.CONFIG_USERNAME }}
        gh pr create --base ${{ env.MASTER_BRANCH_NAME }} --head ${{ env.TEMP_BRANCH_NAME }} --title "${{ env.PULL_TITLE }}" --body "${{ env.PULL_BODY }}" --reviewer ${{ env.ASSIGNEE }} --assignee ${{ env.REVIEWER }}
        gh pr merge ${{ env.TEMP_BRANCH_NAME }} -m --auto
        gh pr review ${{ env.TEMP_BRANCH_NAME }} --approve
      env:
        GH_TOKEN: ${{ github.token }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
